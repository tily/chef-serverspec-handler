require 'spec_helper'

describe '<%= cookbook %>::<%= recipe %>' do
<%- resources.each do |resource| -%>
  <%-
    if [Chef::Resource::File, Chef::Resource::CookbookFile, Chef::Resource::RemoteFile, Chef::Resource::Template].include?(resource.class)
  -%>
  context file('<%= resource.path %>') do
    it {
      should be_file
      <%- if resource.content -%>
      should contain <<-EOF
      <%= resource.content %>
      EOF
      <%- end -%>
      <%- if resource.mode -%>
      should be_mode <%= resource.mode.class == String ? resource.mode.to_i : resource.mode.to_i.to_s(8).to_i %>
      <%- end -%>
      <%- if resource.owner -%>
      should be_owned_by '<%= resource.owner %>'
      <%- end -%>
      <%- if !@options[:safe] && resource.respond_to?(:variables) && resource.variables && resource.variables.values.size > 0 -%>
      <%- resource.variables.each_value do |value| -%>
      should contain '<%= value %>'
      <%- end -%>
      <%- end -%>
    }
  end
  <%- elsif [Chef::Resource::Directory, Chef::Resource::RemoteDirectory].include?(resource.class) -%>
  context file('<%= resource.name %>') do
    it {
      should be_directory
      <%- if resource.mode -%>
      should be_mode <%= resource.mode.class == String ? resource.mode.to_i : resource.mode.to_i.to_s(8).to_i %>
      <%- end -%>
      <%- if resource.owner -%>
      should be_owned_by '<%= resource.owner %>'
      <%- end -%>
    }
  end
  <%- elsif resource.class == Chef::Resource::Package -%>
  context package('<%= resource.name %>') do
    it { should be_installed }
  end
  <%- elsif resource.class == Chef::Resource::Mount -%>
  context file('/') do
    it {
      should be_mounted_with(
      )
    }
   end
  <%- elsif resource.class == Chef::Resource::Link -%>
  context file('<%= resource.target_file %>') do
    it {
      should be_linked_to '<%= resource.to %>'
      <%- if resource.owner -%>
      should be_owned_by '<%= resource.owner %>'
      <%- end -%>
    }
  end
  <%- elsif resource.class == Chef::Resource::User -%>
  context user('<%= resource.username %>') do
    it {
      should exist
      <%- if resource.uid -%>
      should have_uid <%= resource.uid %>
      <%- end -%>
      <%- if resource.home -%>
      should have_home_directory '<%= resource.home %>'
      <%- end -%>
      <%- if resource.shell -%>
      should have_login_shell '<%= resource.shell %>'
      <%- end -%>
    }
  end
  <%- elsif resource.class == Chef::Resource::Group -%>
  context group('<%= resource.group_name %>') do
    it { should exist }
    <%- if resource.gid -%>
    it { should have_gid <%= resource.gid %> }
    <%- end -%>
  end
  <%- elsif resource.class == Chef::Resource::Service -%>
  context service('<%= resource.service_name %>') do
    <%- if regular_actions(resource).include?(:enable) -%>
    it { should be_enabled }
    <%- elsif regular_actions(resource).include?(:start) -%>
    it { should be_running }
    <%- end -%>
  end
  <%- elsif resource.class == Chef::Resource::Cron -%>
  context cron do
    it { should have_entry('<%= resource.minute %> <%= resource.hour %> <%= resource.day %> <%= resource.month %> <%= resource.weekday %> <%= resource.command %>')<%- if resource.user -%>.with_user('<%= resource.user %>')<%- end -%> }
  end
  <%- end -%>

<%- end -%>
end

